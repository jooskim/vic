<?xml version="1.0" encoding="UTF-8"?>
<project name="My Solution" default="make-deployable">
   <description>
      Ant build script for generating a ZIP bundle ready to be deployed to vServer.
      Make sure to create a corresponding vServer Extension Data Object in an XML file format
      For details, read the following document:
      http://pubs.vmware.com/vsphere-60/index.jsp#com.vmware.wcsdk.pg.doc/ModulesAndPackages_Chapter.14.4.html
   </description>

   <!--
      This build script inherits several properties such as PROJECT_NAME from its parent script: build-war.xml (HTML plugin) or build-flex.xml (Flex plugin)
      If you need to make any change to name, vendor name or any other environment variable please refer to the parent script.
   -->

   <script language="javascript">
      var basedir = project.getProperty('basedir').split('/');
      project.setProperty('PROJECT_NAME', basedir[basedir.length - 1]);
    </script>
	
   <property name="UI_MODULE_WARFILE" value="${PROJECT_NAME}"/>
   <property name="SERVICE_MODULE_WARFILE" value="${PROJECT_NAME}-service.jar"/>
   

   <!-- vSphere SDK and Flex SDK home folders should be set in environment variables -->
   <property environment="env"/>
   <property name="FLEX_HOME" value="${env.FLEX_HOME}"/>
   <property name="VSPHERE_SDK_HOME" value="${env.VSPHERE_SDK_HOME}"/>
   <property name="DEPLOY_DIR" value="${basedir}/deploy"/>
   <property name="PLUGINS_DIR" value="${DEPLOY_DIR}/plugins"/>
   <property name="DOCKER_IMG_WORKSPACE" value="${basedir}/../vic-ui-image"/>
   <property name="SERVICE_MODULE_DIR" value="${basedir}/../${PROJECT_NAME}-service"/>
   <xmlproperty file="${basedir}/plugin-package.xml"/>
   <property name="ZIP_FILENAME" value="${pluginPackage(id)}-${pluginPackage(version)}.zip"/>
   <!-- Check a service project exists -->
   <condition property="service-exists">
      <available file="${SERVICE_MODULE_DIR}" type="dir"/>
   </condition>
	
	<!-- Check if the current project is a Flex or HTML project -->
   <condition property="is-flex-module">
      <available file="build-flex.xml"/>
   </condition>

   <!-- Empty and create a scratch folder -->
   <target name="make-folder">
      <delete dir="${DEPLOY_DIR}"/>
      <mkdir dir="${DEPLOY_DIR}"/>
   </target>
	
	<!-- Build UI project -->
   <target name="compile-ui-flex" if="is-flex-module">
   	  <echo>Building Flex plugin...</echo>
      <ant antfile="build-flex.xml"/>
   </target>
		
   <target name="compile-ui-html" unless="is-flex-module">
   	  <echo>Building HTML plugin...</echo>
      <ant antfile="build-war.xml"/>
   </target>
	
   <target name="compile-ui" depends="compile-ui-flex, compile-ui-html">
      
   </target>	

   <!-- Copy UI module bundle to the scratch folder -->
   <target name="copy-ui-module-flex" if="is-flex-module">
   	<echo>Copying Flex plugin bundle...</echo>
   	<copy file="${basedir}/war/target/${UI_MODULE_WARFILE}-war.war" tofile="${PLUGINS_DIR}/${UI_MODULE_WARFILE}-war.war"/>
   </target>

   <target name="copy-ui-module-html" unless="is-flex-module">
   	<echo>Copying HTML plugin bundle...</echo>
   	<copy file="${basedir}/target/${UI_MODULE_WARFILE}.war" tofile="${PLUGINS_DIR}/${UI_MODULE_WARFILE}.war"/>
   </target>
	
   <target name="copy-ui-module" depends="copy-ui-module-flex, copy-ui-module-html">
      
   </target>

	<!-- Build service project if it exists and copy it to the scratch folder -->
   <target name="compile-service-and-copy" if="service-exists">
      <ant antfile="${SERVICE_MODULE_DIR}/build-java.xml" dir="${SERVICE_MODULE_DIR}"/>
      <copy file="${SERVICE_MODULE_DIR}/target/${SERVICE_MODULE_WARFILE}" tofile="${PLUGINS_DIR}/${SERVICE_MODULE_WARFILE}"/>
   </target>

   <target name="build-dockerfile-and-manifest">
      <delete dir="${DOCKER_IMG_WORKSPACE}"/>
      <zip basedir="${DEPLOY_DIR}" destfile="${DOCKER_IMG_WORKSPACE}/${ZIP_FILENAME}"/>
      <mkdir dir="${DOCKER_IMG_WORKSPACE}"/>
      <copy file="${basedir}/configs/nginx.conf" tofile="${DOCKER_IMG_WORKSPACE}/nginx.conf"/>
      <echo file="${DOCKER_IMG_WORKSPACE}/Dockerfile">FROM nginx:alpine
RUN ["mkdir", "-p", "/usr/share/nginx/vicui"]
COPY nginx.conf /etc/nginx/nginx.conf
COPY ${ZIP_FILENAME} /usr/share/nginx/vicui/
COPY manifest.json /usr/share/nginx/vicui/
</echo>
      <echo file="${DOCKER_IMG_WORKSPACE}/manifest.json">{
    "key": "${pluginPackage(id)}",
    "name": "${pluginPackage(name)}",
    "version": "${pluginPackage(version)}",
    "summary", "${pluginPackage(description)}",
    "company": "${pluginPackage(vendor)}",
    "zip_filename": "${ZIP_FILENAME}"
}</echo>
   </target>

   <target name="cleanup">
      <delete dir="${DEPLOY_DIR}"/>
   </target>

   <!-- Run the above steps in order and archive the scratch folder's contents into a ZIP file. Remove the scrach folder once done -->
   <target name="make-deployable" depends="make-folder,compile-ui,copy-ui-module,compile-service-and-copy">
      <copy file="${basedir}/plugin-package.xml" tofile="${DEPLOY_DIR}/plugin-package.xml"/>
      <copy file="${VSPHERE_SDK_HOME}/libs/vim25.jar" tofile="${DEPLOY_DIR}/plugins/vim25.jar"/>
      <antcall target="build-dockerfile-and-manifest"/>
      <antcall target="cleanup"/>
   </target>
   
</project>
